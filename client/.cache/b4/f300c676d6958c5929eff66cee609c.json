{"id":"../node_modules/howler/dist/howler.js","dependencies":[{"name":"C:\\Users\\bxsha\\Documents\\Multiverse\\wiboo_2\\wib__final\\wiboo\\client\\package.json","includedInParent":true,"mtime":1635456485861},{"name":"C:\\Users\\bxsha\\Documents\\Multiverse\\wiboo_2\\wib__final\\wiboo\\client\\node_modules\\howler\\package.json","includedInParent":true,"mtime":1635369256870}],"generated":{"js":"var define;\nvar global = arguments[3];\n/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/howler/dist/howler.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2826,"column":0},"generated":{"line":2828,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2827,"column":0},"generated":{"line":2829,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2828,"column":0},"generated":{"line":2830,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2829,"column":0},"generated":{"line":2831,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2830,"column":0},"generated":{"line":2832,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2831,"column":0},"generated":{"line":2833,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2832,"column":0},"generated":{"line":2834,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2833,"column":0},"generated":{"line":2835,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2834,"column":0},"generated":{"line":2836,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2835,"column":0},"generated":{"line":2837,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2836,"column":0},"generated":{"line":2838,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2837,"column":0},"generated":{"line":2839,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2838,"column":0},"generated":{"line":2840,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2839,"column":0},"generated":{"line":2841,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2840,"column":0},"generated":{"line":2842,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2841,"column":0},"generated":{"line":2843,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2842,"column":0},"generated":{"line":2844,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2843,"column":0},"generated":{"line":2845,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2844,"column":0},"generated":{"line":2846,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2845,"column":0},"generated":{"line":2847,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2846,"column":0},"generated":{"line":2848,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2847,"column":0},"generated":{"line":2849,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2848,"column":0},"generated":{"line":2850,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2849,"column":0},"generated":{"line":2851,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2850,"column":0},"generated":{"line":2852,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2851,"column":0},"generated":{"line":2853,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2852,"column":0},"generated":{"line":2854,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2853,"column":0},"generated":{"line":2855,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2854,"column":0},"generated":{"line":2856,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2855,"column":0},"generated":{"line":2857,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2856,"column":0},"generated":{"line":2858,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2857,"column":0},"generated":{"line":2859,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2858,"column":0},"generated":{"line":2860,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2859,"column":0},"generated":{"line":2861,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2860,"column":0},"generated":{"line":2862,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2861,"column":0},"generated":{"line":2863,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2862,"column":0},"generated":{"line":2864,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2863,"column":0},"generated":{"line":2865,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2864,"column":0},"generated":{"line":2866,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2865,"column":0},"generated":{"line":2867,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2866,"column":0},"generated":{"line":2868,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2867,"column":0},"generated":{"line":2869,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2868,"column":0},"generated":{"line":2870,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2869,"column":0},"generated":{"line":2871,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2870,"column":0},"generated":{"line":2872,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2871,"column":0},"generated":{"line":2873,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2872,"column":0},"generated":{"line":2874,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2873,"column":0},"generated":{"line":2875,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2874,"column":0},"generated":{"line":2876,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2875,"column":0},"generated":{"line":2877,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2876,"column":0},"generated":{"line":2878,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2877,"column":0},"generated":{"line":2879,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2878,"column":0},"generated":{"line":2880,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2879,"column":0},"generated":{"line":2881,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2880,"column":0},"generated":{"line":2882,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2881,"column":0},"generated":{"line":2883,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2882,"column":0},"generated":{"line":2884,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2883,"column":0},"generated":{"line":2885,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2884,"column":0},"generated":{"line":2886,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2885,"column":0},"generated":{"line":2887,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2886,"column":0},"generated":{"line":2888,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2887,"column":0},"generated":{"line":2889,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2888,"column":0},"generated":{"line":2890,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2889,"column":0},"generated":{"line":2891,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2890,"column":0},"generated":{"line":2892,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2891,"column":0},"generated":{"line":2893,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2892,"column":0},"generated":{"line":2894,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2893,"column":0},"generated":{"line":2895,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2894,"column":0},"generated":{"line":2896,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2895,"column":0},"generated":{"line":2897,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2896,"column":0},"generated":{"line":2898,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2897,"column":0},"generated":{"line":2899,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2898,"column":0},"generated":{"line":2900,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2899,"column":0},"generated":{"line":2901,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2900,"column":0},"generated":{"line":2902,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2901,"column":0},"generated":{"line":2903,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2902,"column":0},"generated":{"line":2904,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2903,"column":0},"generated":{"line":2905,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2904,"column":0},"generated":{"line":2906,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2905,"column":0},"generated":{"line":2907,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2906,"column":0},"generated":{"line":2908,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2907,"column":0},"generated":{"line":2909,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2908,"column":0},"generated":{"line":2910,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2909,"column":0},"generated":{"line":2911,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2910,"column":0},"generated":{"line":2912,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2911,"column":0},"generated":{"line":2913,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2912,"column":0},"generated":{"line":2914,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2913,"column":0},"generated":{"line":2915,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2914,"column":0},"generated":{"line":2916,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2915,"column":0},"generated":{"line":2917,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2916,"column":0},"generated":{"line":2918,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2917,"column":0},"generated":{"line":2919,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2918,"column":0},"generated":{"line":2920,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2919,"column":0},"generated":{"line":2921,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2920,"column":0},"generated":{"line":2922,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2921,"column":0},"generated":{"line":2923,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2922,"column":0},"generated":{"line":2924,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2923,"column":0},"generated":{"line":2925,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2924,"column":0},"generated":{"line":2926,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2925,"column":0},"generated":{"line":2927,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2926,"column":0},"generated":{"line":2928,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2927,"column":0},"generated":{"line":2929,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2928,"column":0},"generated":{"line":2930,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2929,"column":0},"generated":{"line":2931,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2930,"column":0},"generated":{"line":2932,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2931,"column":0},"generated":{"line":2933,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2932,"column":0},"generated":{"line":2934,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2933,"column":0},"generated":{"line":2935,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2934,"column":0},"generated":{"line":2936,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2935,"column":0},"generated":{"line":2937,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2936,"column":0},"generated":{"line":2938,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2937,"column":0},"generated":{"line":2939,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2938,"column":0},"generated":{"line":2940,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2939,"column":0},"generated":{"line":2941,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2940,"column":0},"generated":{"line":2942,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2941,"column":0},"generated":{"line":2943,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2942,"column":0},"generated":{"line":2944,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2943,"column":0},"generated":{"line":2945,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2944,"column":0},"generated":{"line":2946,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2945,"column":0},"generated":{"line":2947,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2946,"column":0},"generated":{"line":2948,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2947,"column":0},"generated":{"line":2949,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2948,"column":0},"generated":{"line":2950,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2949,"column":0},"generated":{"line":2951,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2950,"column":0},"generated":{"line":2952,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2951,"column":0},"generated":{"line":2953,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2952,"column":0},"generated":{"line":2954,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2953,"column":0},"generated":{"line":2955,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2954,"column":0},"generated":{"line":2956,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2955,"column":0},"generated":{"line":2957,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2956,"column":0},"generated":{"line":2958,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2957,"column":0},"generated":{"line":2959,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2958,"column":0},"generated":{"line":2960,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2959,"column":0},"generated":{"line":2961,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2960,"column":0},"generated":{"line":2962,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2961,"column":0},"generated":{"line":2963,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2962,"column":0},"generated":{"line":2964,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2963,"column":0},"generated":{"line":2965,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2964,"column":0},"generated":{"line":2966,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2965,"column":0},"generated":{"line":2967,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2966,"column":0},"generated":{"line":2968,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2967,"column":0},"generated":{"line":2969,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2968,"column":0},"generated":{"line":2970,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2969,"column":0},"generated":{"line":2971,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2970,"column":0},"generated":{"line":2972,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2971,"column":0},"generated":{"line":2973,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2972,"column":0},"generated":{"line":2974,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2973,"column":0},"generated":{"line":2975,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2974,"column":0},"generated":{"line":2976,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2975,"column":0},"generated":{"line":2977,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2976,"column":0},"generated":{"line":2978,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2977,"column":0},"generated":{"line":2979,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2978,"column":0},"generated":{"line":2980,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2979,"column":0},"generated":{"line":2981,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2980,"column":0},"generated":{"line":2982,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2981,"column":0},"generated":{"line":2983,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2982,"column":0},"generated":{"line":2984,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2983,"column":0},"generated":{"line":2985,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2984,"column":0},"generated":{"line":2986,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2985,"column":0},"generated":{"line":2987,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2986,"column":0},"generated":{"line":2988,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2987,"column":0},"generated":{"line":2989,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2988,"column":0},"generated":{"line":2990,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2989,"column":0},"generated":{"line":2991,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2990,"column":0},"generated":{"line":2992,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2991,"column":0},"generated":{"line":2993,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2992,"column":0},"generated":{"line":2994,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2993,"column":0},"generated":{"line":2995,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2994,"column":0},"generated":{"line":2996,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2995,"column":0},"generated":{"line":2997,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2996,"column":0},"generated":{"line":2998,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2997,"column":0},"generated":{"line":2999,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2998,"column":0},"generated":{"line":3000,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":2999,"column":0},"generated":{"line":3001,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3000,"column":0},"generated":{"line":3002,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3001,"column":0},"generated":{"line":3003,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3002,"column":0},"generated":{"line":3004,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3003,"column":0},"generated":{"line":3005,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3004,"column":0},"generated":{"line":3006,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3005,"column":0},"generated":{"line":3007,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3006,"column":0},"generated":{"line":3008,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3007,"column":0},"generated":{"line":3009,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3008,"column":0},"generated":{"line":3010,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3009,"column":0},"generated":{"line":3011,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3010,"column":0},"generated":{"line":3012,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3011,"column":0},"generated":{"line":3013,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3012,"column":0},"generated":{"line":3014,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3013,"column":0},"generated":{"line":3015,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3014,"column":0},"generated":{"line":3016,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3015,"column":0},"generated":{"line":3017,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3016,"column":0},"generated":{"line":3018,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3017,"column":0},"generated":{"line":3019,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3018,"column":0},"generated":{"line":3020,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3019,"column":0},"generated":{"line":3021,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3020,"column":0},"generated":{"line":3022,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3021,"column":0},"generated":{"line":3023,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3022,"column":0},"generated":{"line":3024,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3023,"column":0},"generated":{"line":3025,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3024,"column":0},"generated":{"line":3026,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3025,"column":0},"generated":{"line":3027,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3026,"column":0},"generated":{"line":3028,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3027,"column":0},"generated":{"line":3029,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3028,"column":0},"generated":{"line":3030,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3029,"column":0},"generated":{"line":3031,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3030,"column":0},"generated":{"line":3032,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3031,"column":0},"generated":{"line":3033,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3032,"column":0},"generated":{"line":3034,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3033,"column":0},"generated":{"line":3035,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3034,"column":0},"generated":{"line":3036,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3035,"column":0},"generated":{"line":3037,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3036,"column":0},"generated":{"line":3038,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3037,"column":0},"generated":{"line":3039,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3038,"column":0},"generated":{"line":3040,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3039,"column":0},"generated":{"line":3041,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3040,"column":0},"generated":{"line":3042,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3041,"column":0},"generated":{"line":3043,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3042,"column":0},"generated":{"line":3044,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3043,"column":0},"generated":{"line":3045,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3044,"column":0},"generated":{"line":3046,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3045,"column":0},"generated":{"line":3047,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3046,"column":0},"generated":{"line":3048,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3047,"column":0},"generated":{"line":3049,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3048,"column":0},"generated":{"line":3050,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3049,"column":0},"generated":{"line":3051,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3050,"column":0},"generated":{"line":3052,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3051,"column":0},"generated":{"line":3053,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3052,"column":0},"generated":{"line":3054,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3053,"column":0},"generated":{"line":3055,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3054,"column":0},"generated":{"line":3056,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3055,"column":0},"generated":{"line":3057,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3056,"column":0},"generated":{"line":3058,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3057,"column":0},"generated":{"line":3059,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3058,"column":0},"generated":{"line":3060,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3059,"column":0},"generated":{"line":3061,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3060,"column":0},"generated":{"line":3062,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3061,"column":0},"generated":{"line":3063,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3062,"column":0},"generated":{"line":3064,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3063,"column":0},"generated":{"line":3065,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3064,"column":0},"generated":{"line":3066,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3065,"column":0},"generated":{"line":3067,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3066,"column":0},"generated":{"line":3068,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3067,"column":0},"generated":{"line":3069,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3068,"column":0},"generated":{"line":3070,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3069,"column":0},"generated":{"line":3071,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3070,"column":0},"generated":{"line":3072,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3071,"column":0},"generated":{"line":3073,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3072,"column":0},"generated":{"line":3074,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3073,"column":0},"generated":{"line":3075,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3074,"column":0},"generated":{"line":3076,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3075,"column":0},"generated":{"line":3077,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3076,"column":0},"generated":{"line":3078,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3077,"column":0},"generated":{"line":3079,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3078,"column":0},"generated":{"line":3080,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3079,"column":0},"generated":{"line":3081,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3080,"column":0},"generated":{"line":3082,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3081,"column":0},"generated":{"line":3083,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3082,"column":0},"generated":{"line":3084,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3083,"column":0},"generated":{"line":3085,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3084,"column":0},"generated":{"line":3086,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3085,"column":0},"generated":{"line":3087,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3086,"column":0},"generated":{"line":3088,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3087,"column":0},"generated":{"line":3089,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3088,"column":0},"generated":{"line":3090,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3089,"column":0},"generated":{"line":3091,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3090,"column":0},"generated":{"line":3092,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3091,"column":0},"generated":{"line":3093,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3092,"column":0},"generated":{"line":3094,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3093,"column":0},"generated":{"line":3095,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3094,"column":0},"generated":{"line":3096,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3095,"column":0},"generated":{"line":3097,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3096,"column":0},"generated":{"line":3098,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3097,"column":0},"generated":{"line":3099,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3098,"column":0},"generated":{"line":3100,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3099,"column":0},"generated":{"line":3101,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3100,"column":0},"generated":{"line":3102,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3101,"column":0},"generated":{"line":3103,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3102,"column":0},"generated":{"line":3104,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3103,"column":0},"generated":{"line":3105,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3104,"column":0},"generated":{"line":3106,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3105,"column":0},"generated":{"line":3107,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3106,"column":0},"generated":{"line":3108,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3107,"column":0},"generated":{"line":3109,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3108,"column":0},"generated":{"line":3110,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3109,"column":0},"generated":{"line":3111,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3110,"column":0},"generated":{"line":3112,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3111,"column":0},"generated":{"line":3113,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3112,"column":0},"generated":{"line":3114,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3113,"column":0},"generated":{"line":3115,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3114,"column":0},"generated":{"line":3116,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3115,"column":0},"generated":{"line":3117,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3116,"column":0},"generated":{"line":3118,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3117,"column":0},"generated":{"line":3119,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3118,"column":0},"generated":{"line":3120,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3119,"column":0},"generated":{"line":3121,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3120,"column":0},"generated":{"line":3122,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3121,"column":0},"generated":{"line":3123,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3122,"column":0},"generated":{"line":3124,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3123,"column":0},"generated":{"line":3125,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3124,"column":0},"generated":{"line":3126,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3125,"column":0},"generated":{"line":3127,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3126,"column":0},"generated":{"line":3128,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3127,"column":0},"generated":{"line":3129,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3128,"column":0},"generated":{"line":3130,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3129,"column":0},"generated":{"line":3131,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3130,"column":0},"generated":{"line":3132,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3131,"column":0},"generated":{"line":3133,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3132,"column":0},"generated":{"line":3134,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3133,"column":0},"generated":{"line":3135,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3134,"column":0},"generated":{"line":3136,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3135,"column":0},"generated":{"line":3137,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3136,"column":0},"generated":{"line":3138,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3137,"column":0},"generated":{"line":3139,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3138,"column":0},"generated":{"line":3140,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3139,"column":0},"generated":{"line":3141,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3140,"column":0},"generated":{"line":3142,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3141,"column":0},"generated":{"line":3143,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3142,"column":0},"generated":{"line":3144,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3143,"column":0},"generated":{"line":3145,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3144,"column":0},"generated":{"line":3146,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3145,"column":0},"generated":{"line":3147,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3146,"column":0},"generated":{"line":3148,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3147,"column":0},"generated":{"line":3149,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3148,"column":0},"generated":{"line":3150,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3149,"column":0},"generated":{"line":3151,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3150,"column":0},"generated":{"line":3152,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3151,"column":0},"generated":{"line":3153,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3152,"column":0},"generated":{"line":3154,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3153,"column":0},"generated":{"line":3155,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3154,"column":0},"generated":{"line":3156,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3155,"column":0},"generated":{"line":3157,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3156,"column":0},"generated":{"line":3158,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3157,"column":0},"generated":{"line":3159,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3158,"column":0},"generated":{"line":3160,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3159,"column":0},"generated":{"line":3161,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3160,"column":0},"generated":{"line":3162,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3161,"column":0},"generated":{"line":3163,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3162,"column":0},"generated":{"line":3164,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3163,"column":0},"generated":{"line":3165,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3164,"column":0},"generated":{"line":3166,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3165,"column":0},"generated":{"line":3167,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3166,"column":0},"generated":{"line":3168,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3167,"column":0},"generated":{"line":3169,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3168,"column":0},"generated":{"line":3170,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3169,"column":0},"generated":{"line":3171,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3170,"column":0},"generated":{"line":3172,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3171,"column":0},"generated":{"line":3173,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3172,"column":0},"generated":{"line":3174,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3173,"column":0},"generated":{"line":3175,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3174,"column":0},"generated":{"line":3176,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3175,"column":0},"generated":{"line":3177,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3176,"column":0},"generated":{"line":3178,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3177,"column":0},"generated":{"line":3179,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3178,"column":0},"generated":{"line":3180,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3179,"column":0},"generated":{"line":3181,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3180,"column":0},"generated":{"line":3182,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3181,"column":0},"generated":{"line":3183,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3182,"column":0},"generated":{"line":3184,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3183,"column":0},"generated":{"line":3185,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3184,"column":0},"generated":{"line":3186,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3185,"column":0},"generated":{"line":3187,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3186,"column":0},"generated":{"line":3188,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3187,"column":0},"generated":{"line":3189,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3188,"column":0},"generated":{"line":3190,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3189,"column":0},"generated":{"line":3191,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3190,"column":0},"generated":{"line":3192,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3191,"column":0},"generated":{"line":3193,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3192,"column":0},"generated":{"line":3194,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3193,"column":0},"generated":{"line":3195,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3194,"column":0},"generated":{"line":3196,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3195,"column":0},"generated":{"line":3197,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3196,"column":0},"generated":{"line":3198,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3197,"column":0},"generated":{"line":3199,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3198,"column":0},"generated":{"line":3200,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3199,"column":0},"generated":{"line":3201,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3200,"column":0},"generated":{"line":3202,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3201,"column":0},"generated":{"line":3203,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3202,"column":0},"generated":{"line":3204,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3203,"column":0},"generated":{"line":3205,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3204,"column":0},"generated":{"line":3206,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3205,"column":0},"generated":{"line":3207,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3206,"column":0},"generated":{"line":3208,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3207,"column":0},"generated":{"line":3209,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3208,"column":0},"generated":{"line":3210,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3209,"column":0},"generated":{"line":3211,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3210,"column":0},"generated":{"line":3212,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3211,"column":0},"generated":{"line":3213,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3212,"column":0},"generated":{"line":3214,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3213,"column":0},"generated":{"line":3215,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3214,"column":0},"generated":{"line":3216,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3215,"column":0},"generated":{"line":3217,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3216,"column":0},"generated":{"line":3218,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3217,"column":0},"generated":{"line":3219,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3218,"column":0},"generated":{"line":3220,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3219,"column":0},"generated":{"line":3221,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3220,"column":0},"generated":{"line":3222,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3221,"column":0},"generated":{"line":3223,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3222,"column":0},"generated":{"line":3224,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3223,"column":0},"generated":{"line":3225,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3224,"column":0},"generated":{"line":3226,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3225,"column":0},"generated":{"line":3227,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3226,"column":0},"generated":{"line":3228,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3227,"column":0},"generated":{"line":3229,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3228,"column":0},"generated":{"line":3230,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3229,"column":0},"generated":{"line":3231,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3230,"column":0},"generated":{"line":3232,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3231,"column":0},"generated":{"line":3233,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3232,"column":0},"generated":{"line":3234,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3233,"column":0},"generated":{"line":3235,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3234,"column":0},"generated":{"line":3236,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3235,"column":0},"generated":{"line":3237,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3236,"column":0},"generated":{"line":3238,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3237,"column":0},"generated":{"line":3239,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3238,"column":0},"generated":{"line":3240,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3239,"column":0},"generated":{"line":3241,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3240,"column":0},"generated":{"line":3242,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3241,"column":0},"generated":{"line":3243,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3242,"column":0},"generated":{"line":3244,"column":0}},{"source":"../node_modules/howler/dist/howler.js","original":{"line":3243,"column":0},"generated":{"line":3245,"column":0}}],"sources":{"../node_modules/howler/dist/howler.js":"/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n"},"lineCount":3245}},"error":null,"hash":"9dddebcfb1633fb032301c2e03e18462","cacheData":{"env":{}}}