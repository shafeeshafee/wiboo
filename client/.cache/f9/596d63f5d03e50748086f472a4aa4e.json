{"id":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","dependencies":[{"name":"C:\\Users\\bxsha\\Documents\\Multiverse\\wiboo_2\\wib__final\\wiboo\\client\\package.json","includedInParent":true,"mtime":1635456485861},{"name":"C:\\Users\\bxsha\\Documents\\Multiverse\\wiboo_2\\wib__final\\wiboo\\client\\node_modules\\react-scroll-to-bottom\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1634919730240}],"generated":{"js":"var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- safe\n  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"../node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-integer-or-infinity.js":"var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- safe\n  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n"},"lineCount":11}},"error":null,"hash":"95fdc2d42f8d90110015e3387a0bb6af","cacheData":{"env":{}}}